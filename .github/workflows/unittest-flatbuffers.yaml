name: Unittest Flatbuffers
on:
  push:
    paths:
      - '.github/workflows/unittest-flatbuffers.yaml'
      - 'tutorial/flatbuffers/**'
  schedule:
    - cron: '0 0 * * 6'
  workflow_dispatch:

jobs:
  cpp:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.10
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: apt-get update
      - run: apt-get install -y curl wget git gcc g++ cmake ninja-build lld python3 python3-pip
      - run: pip3 install conan
      - run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
      - uses: bazelbuild/setup-bazelisk@v2
      - name: mount conan cache
        uses: actions/cache@v3
        with:
          path: ~/.conan/data
          key: conan-${{ runner.os }}-${{ hashFiles('build/conan/conanfile.txt') }}

      - name: install conan package
        run: task
        working-directory: build/conan

      - name: setup buildbuddy
        run: |
          echo 'build --bes_results_url=https://app.buildbuddy.io/invocation/' >> .bazelrc
          echo 'build --bes_backend=grpcs://remote.buildbuddy.io' >> .bazelrc
          echo 'build --remote_cache=grpcs://remote.buildbuddy.io' >> .bazelrc
          echo 'build --remote_timeout=3600' >> .bazelrc
          echo 'build --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API }}' >> .bazelrc

      - name: bazel build
        run: bazel build --remote_download_minimal //tutorial/flatbuffers/...

      - name: bazel test
        run: bazel test //tutorial/flatbuffers/... || echo ignore error

  rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
        with:
          key: rust-${{ runner.os }}

  golang:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
          cache: true

  java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18'
          cache: 'maven'
